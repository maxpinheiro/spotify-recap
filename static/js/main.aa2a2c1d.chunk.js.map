{"version":3,"sources":["services/SpotifyService.js","components/Home.js","components/RecapInfo.js","components/Recapper.js","components/SpotifyCallback.js","components/FallbackHandler.js","index.js"],"names":["spotify_client_id","spotify_client_secret","spotify_redirect_uri_unencoded","spotify_api_root","jsonToUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","auth_code","a","local","encoded","grant_type","code","redirect_uri","fetch","method","headers","Authorization","window","btoa","body","then","res","json","data","Promise","resolve","reject","hasOwnProperty","success","accessToken","access_token","refreshToken","refresh_token","expiresIn","expires_in","errorMessage","error_description","catch","e","console","log","type","timespan","items","status","playing","item","song","name","artist","artists","spotifyId","id","albumArtUrl","album","images","url","audioFeatures","danceability","energy","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms","time_signature","beats","query","tracks","songs","track","spotifyUri","uri","imageUrl","message","spotifyService","getTokens","refreshTokens","getTopItems","getCurrentTrack","getAudioFeatures","getAudioAnalysis","searchSongs","state","length","text","possible","i","charAt","Math","floor","random","generateRandomString","LoadingMessage","color","textColor","width","height","className","Home","useState","spotifyCallback","setSpotifyCallback","useEffect","location","pathname","includes","hostname","to","search","style","href","Item","nameElement","link","showImage","src","alt","maxWidth","maxHeight","ArtistList","idx","external_urls","spotify","TrackList","timeRangeNames","short_term","medium_term","long_term","RecapInfo","topArtists","topTracks","setType","timeRange","setTimeRange","optType","onClick","range","queryString","require","initialState","undefined","startTimeMs","RecapContainer","props","refreshPlayer","bind","parse","this","setState","prevState","Date","now","getAllTopItems","prevProps","snapshot","document","backdropFilter","backgroundImage","classList","add","timeSinceStart","timeLeft","ceil","spotifyRefreshToken","spotifyAccessToken","spotifyExpiresIn","history","push","findCurrentSong","allData","forEach","genreDict","genres","genre","React","Component","SpotifyCallback","error","setTimeout","spotifyCode","FallbackHandler","setSpotifyCode","hash","substring","ReactDOM","render","StrictMode","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.aa2a2c1d.chunk.js","sourcesContent":["// spotify dashboard: maxpinheiro181, Poi1poi1$$\nexport const spotify_client_id = \"ae520a706c27417f8b6b44bc41c224d0\";\nexport const spotify_client_secret = \"2fecacd1974f4b9aacc3bafb76e8aeda\";\nexport const spotify_redirect_uri = \"http://maxpinheiro.github.io/spotify-recap%2F%23%2Fspotifycallback\";\nconst spotify_redirect_uri_unencoded = \"http://maxpinheiro.github.io/spotify-recap/#/spotifycallback\";\n//export const local_spotify_redirect_uri = \"http://localhost:3000/spotifycallback\";\nexport const local_spotify_redirect_uri = \"http://localhost:3000%2F%23%2Fcallback\";\nconst local_spotify_redirect_uri_unencoded = \"http://localhost:3000/#/callback\";\n//export const local_spotify_redirect_uri = \"http://localhost:3000%23%2Fcallback\";\nconst spotify_api_root = \"https://api.spotify.com/v1\";\n\nexport const generateRandomString = (length) => {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nexport const jsonToUrlEncoded = (obj) => Object.keys(obj).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(obj[key])).join('&');\n\n/*\n* Response object:\n* success (200 status in header):\n*  {\n   \"access_token\": \"NgCXRK...MzYjw\",\n   \"token_type\": \"Bearer\",\n   \"scope\": \"user-read-private user-read-email\",\n   \"expires_in\": 3600,\n   \"refresh_token\": \"NgAagA...Um_SHo\"\n}\n* error (400 status in header):\n*   {\n*   \"error\": \"invalid_grant\",\n*   \"error_description\": \"Invalid authorization code\"\n*   }\n*/\nexport async function getTokens(auth_code, local = true) {\n    const body = {\n        grant_type: \"authorization_code\",\n        code: auth_code,\n        redirect_uri: local ? local_spotify_redirect_uri_unencoded : spotify_redirect_uri_unencoded\n    };\n    const encoded = jsonToUrlEncoded(body);\n\n    return fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": 'application/x-www-form-urlencoded',\n            Authorization: 'Basic ' + window.btoa(`${spotify_client_id}:${spotify_client_secret}`)\n        },\n        body: encoded\n    }).then(res =>  res.json().then(data => {\n        return new Promise((resolve, reject) => {\n            if (data.hasOwnProperty(\"access_token\") && data.hasOwnProperty(\"refresh_token\") && data.hasOwnProperty(\"expires_in\")) {\n                resolve({success: true, accessToken: data.access_token, refreshToken: data.refresh_token, expiresIn: data.expires_in});\n            } else if (data.hasOwnProperty(\"error\") && data.hasOwnProperty(\"error_description\")) {\n                resolve({success: false, errorMessage: data.error_description});\n            } else {\n                resolve({success: false, errorMessage: \"unknown error\"});\n            }\n        })\n    })).catch(e => {console.log(\"TOKEN ERROR: \", e); return e.json()})\n}\n\n/*\n* Response object:\n* success (200 status in header):\n*  {\n   \"access_token\": \"NgCXRK...MzYjw\",\n   \"token_type\": \"Bearer\",\n   \"scope\": \"user-read-private user-read-email\",\n   \"expires_in\": 3600\n}\n*\n*/\nexport async function refreshTokens(refresh_token) {\n    const body = {\n        grant_type: \"refresh_token\",\n        refresh_token\n    };\n    const encoded = jsonToUrlEncoded(body);\n\n    return fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": 'application/x-www-form-urlencoded',\n            Authorization: 'Basic ' + window.btoa(`${spotify_client_id}:${spotify_client_secret}`)\n        },\n        body: encoded\n    }).then(res =>  res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"access_token\") && data.hasOwnProperty(\"expires_in\")) {\n                resolve({success: true, accessToken: data.access_token, expiresIn: data.expires_in});\n            } else if (data.hasOwnProperty(\"error\") && data.hasOwnProperty(\"error_description\")) {\n                resolve({success: false, errorMessage: data.error_description});\n            } else {\n                resolve({success: false, errorMessage: \"unknown error\"});\n            }\n        })\n    })).catch(e => e.json())\n}\n\n// type: artists | tracks\nexport async function getTopItems(access_token, type=\"artists\", timespan=\"medium_term\") {\n    return fetch(`${spotify_api_root}/me/top/${type}?time_range=${timespan}`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"items\")) {\n                resolve({success: true, items: data.items});\n            } else {\n                resolve({success: false});\n            }\n        })\n    }))\n}\n\nexport async function getRecommendations(access_token, items, type=\"artists\") {\n    return fetch(`${spotify_api_root}/recommendations?seed_${type}=${items}`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"items\")) {\n                resolve({success: true, items: data.items});\n            } else {\n                resolve({success: false});\n            }\n        })\n    }))\n}\n\nexport async function getCurrentTrack(access_token) {\n    return fetch(`${spotify_api_root}/me/player/currently-playing`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => {\n        if (res.status === 204) {\n            return new Promise(resolve => resolve({success: false, playing: false}))\n        } else {\n            return res.json().then(data => {\n                return new Promise(resolve => {\n                    if (data.hasOwnProperty(\"item\") && data.item.hasOwnProperty(\"name\") && data.item.hasOwnProperty(\"artists\")) {\n                        const song = data.item.name;\n                        const artist = data.item.artists[0].name;\n                        const spotifyId = data.item.id;\n                        const albumArtUrl = data.item.album.images[0].url;\n                        resolve({success: true, song, artist, spotifyId, albumArtUrl});\n                    } else {\n                        resolve({success: false, errorMessage: \"unknown error\"});\n                    }\n                })\n            })\n        }\n    })\n}\n\nexport async function getAudioFeatures(spotifyId, access_token) {\n    return fetch(`${spotify_api_root}/audio-features/${spotifyId}`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"danceability\")) {\n                resolve({success: true, audioFeatures: {\n                        danceability: data.danceability,\n                        energy: data.energy,\n                        key: data.key,\n                        loudness: data.loudness,\n                        mode:  data.mode,\n                        speechiness: data.speechiness,\n                        acousticness: data.acousticness,\n                        instrumentalness: data.instrumentalness,\n                        liveness: data.liveness,\n                        valence: data.valence,\n                        tempo: data.tempo,\n                        type: data.type,\n                        duration_ms: data.duration_ms,\n                        time_signature: data.time_signature\n                    }})\n            } else {\n                resolve({success: false});\n            }\n        })\n    }))\n}\n\nexport async function getAudioAnalysis(spotifyId, access_token) {\n    return fetch(`${spotify_api_root}/audio-features/${spotifyId}`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"beats\")) {\n                resolve({success: true, beats: data.beats});\n            } else {\n                resolve({success: false});\n            }\n        })\n    }))\n}\n\nexport async function searchSongs(query, access_token) {\n    return fetch(`${spotify_api_root}/search?q=${query}&type=track&limit=10`, {\n        headers: {\n            \"Content-Type\": 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    }).then(res => res.json().then(data => {\n        return new Promise(resolve => {\n            if (data.hasOwnProperty(\"tracks\")) {\n                const tracks = data.tracks.items;\n                const concatArtists = (artists) => (artists.join(', '));\n                const songs = tracks.map(track => ({name: track.name, artist: concatArtists(track.artists.map(a => a.name)), spotifyId: track.id, spotifyUri: track.uri, imageUrl: track.album.images[0].url}));\n                resolve({success: true, songs});\n            } else if (data.hasOwnProperty(\"error\")) {\n                resolve({success: false, errorMessage: data.message});\n            } else {\n                resolve({success: false, errorMessage: \"unknown error\"});\n            }\n        })\n    }))\n}\n\n\n\nconst spotifyService = {getTokens, refreshTokens, getTopItems, getCurrentTrack, getAudioFeatures, getAudioAnalysis, searchSongs};\nexport default spotifyService;\n","import React, {useEffect, useState} from 'react';\nimport {generateRandomString, spotify_client_id, spotify_redirect_uri, local_spotify_redirect_uri} from '../services/SpotifyService';\nimport Loader from \"react-loader-spinner\";\nimport {Redirect} from \"react-router-dom\";\n\nconst scope = 'user-top-read user-read-private user-read-currently-playing user-read-email';\nconst developing = true;\nconst state = generateRandomString(10);\n\nexport const LoadingMessage = (message, color = \"#15d61c\", textColor = \"text-black\", width = 80, height = 80) => (\n    <div>\n        <p className={`mb-3 ${textColor}`}>{message}</p>\n        <div className=\"flex\">\n            <Loader className=\"mx-auto\" type=\"Oval\" color={color} height={height} width={width}/>\n        </div>\n    </div>\n)\n\nconst Home = () => {\n    const [spotifyCallback, setSpotifyCallback] = useState(false);\n    useEffect(() => {\n        if (window.location.pathname.includes('spotifycallback')) {\n            setSpotifyCallback(true);\n        }\n    }, [])\n\n    const local = window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname === \"\";\n    console.log(`Mode: ${local ? 'development' : 'production'}`);\n    if (spotifyCallback) {\n        return <Redirect to={`/callback${window.location.search}`} />;\n    } else {\n        return (\n            <div className=\"container mx-auto\">\n                <div style={{height: \"25vh\"}} />\n                <p className=\"text-4xl font-semibold text-josephin my-4 text-center text-spotify-green\">Spotify Recap</p>\n                <div className=\"py-5\" />\n                <div className=\"flex\">\n                    <a href={`https://accounts.spotify.com/authorize?client_id=${spotify_client_id}&response_type=code&redirect_uri=${local ? local_spotify_redirect_uri : spotify_redirect_uri}&state=${state}&scope=${scope}&show_dialog=${developing}`}\n                       className=\"rounded-lg p-4 bg-spotify-green text-xl text-josephin text-white mx-auto\">\n                        Login through Spotify\n                    </a>\n                </div>\n                <div style={{height: \"50vh\"}} />\n            </div>\n        )\n    }\n\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\n\nconst Item = ({nameElement, imageUrl, link}, showImage=true) => (\n    <div className=\"d-flex flex-column mx-auto items-center mb-4 cursor-pointer\">\n        <a href={link}>\n            { showImage && <img src={imageUrl} alt=\"album cover\" className=\"mx-auto mb-1 rounded-full\" style={{width: \"60vw\", height: \"60vw\", maxWidth: 300, maxHeight: 300}} />}\n            { nameElement }\n        </a>\n    </div>\n)\n\nconst ArtistList = ({items, showImage=true}) => (\n    <div>\n        {\n            items.map((artist, idx) => (\n                <Item key={idx}\n                    nameElement={<p className=\"text-white text-2xl\">{artist.name}</p>} \n                    imageUrl={artist.images[0]?.url || \"\"} \n                    link={artist.external_urls?.spotify || \"\"} \n                    showImage={showImage} \n                /> )\n            )\n        }\n    </div>\n);\n\nconst TrackList = ({items, showImage=true}) => (\n    <div>\n        {\n            items.map((track, idx) => (\n                <Item key={idx}\n                    nameElement={<div><p className=\"text-white text-2xl\">{track.name}</p><p className=\"text-white text-lg\">{track.artists[0]?.name || \"\"}</p></div>}\n                    imageUrl={track.album?.images[0]?.url || \"\"} \n                    link={track.external_urls?.spotify || \"\"} \n                    showImage={showImage} \n                />) \n            )\n        }\n    </div>\n);\n\n//const emptyOptions = {short_term: [], medium_term: [], long_term: []};\nconst timeRangeNames = {short_term: \"last 4 weeks\", medium_term: \"last 6 months\", long_term: \"several years\"};\n\nconst RecapInfo = ({topArtists, topTracks}) => {\n    const [type, setType] = useState(\"artists\");\n    const [timeRange, setTimeRange] = useState(\"\");\n\n    useEffect(() => {\n    }, []);\n    \n    return (\n        <div className=\"flex flex-col text-josefin\">\n            <div className=\"flex mx-auto\">\n                <p className=\"text-white text-2xl mx-1\">top</p>\n                {\n                    ([\"artists\", \"tracks\"]).map(optType => <p className={`text-white${optType === type ? \" cursor-pointer\" : \"-disabled\"} text-2xl mx-1`} onClick={() => setType(optType)}>{optType}</p>)\n                }                \n            </div>\n            <div className=\"flex mx-auto my-2\">\n                {\n                    ([\"short_term\", \"medium_term\", \"long_term\"]).map(range => <p className={`text-white${range === timeRange ? \"\" : \"-disabled\"} text-xl cursor-pointer mx-2`} onClick={() => setTimeRange(range)}>{timeRangeNames[range] || \"\"}</p>)\n                }\n            </div>\n            \n            <div className=\"border-b border-white w-1/2 mb-3 mt-1 mx-auto\"/>\n            {\n                type === \"artists\" && <ArtistList items={topArtists[timeRange] || []} />\n            }\n            {\n                type === \"tracks\" && <TrackList items={topTracks[timeRange] || []} />\n            }\n        </div>\n    )\n}\n\nexport default RecapInfo;\n","import React from 'react';\nimport spotifyService from \"../services/SpotifyService\";\nimport { LoadingMessage } from './Home';\nimport RecapInfo from './RecapInfo';\n\nconst queryString = require('query-string');\n\nconst initialState = {\n    status: \"loading\",\n    accessToken: undefined,\n    refreshToken: undefined,\n    expiresIn: undefined,\n    startTimeMs: undefined,\n};\n\nclass RecapContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n\n        this.refreshPlayer = this.refreshPlayer.bind(this);\n    }\n\n    componentDidMount() {\n        // logic: detect current playback, fetch lyrics for song, display info to page\n        // extra: use song features for more specific rendering (background? font? color?)\n        const {accessToken, refreshToken, expiresIn, startTimeMs} = queryString.parse(this.props.location.search);\n\n        if (accessToken) {\n            this.setState(prevState => ({...prevState, accessToken, refreshToken, expiresIn, startTimeMs}));\n            if (((Date.now() - startTimeMs) / 1000) >= expiresIn) {\n                this.refreshPlayer(refreshToken);\n            } else {\n                this.getAllTopItems(accessToken);\n            }\n        } else {\n            this.setState({status: \"error\", message: \"The player failed to load for an unknown reason. Please refresh the page, or redirect to the home page to restart the authorization flow.\"})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {accessToken, refreshToken, expiresIn, startTimeMs} = queryString.parse(this.props.location.search);\n        if (startTimeMs && startTimeMs !== prevState.startTimeMs) this.setState(prevState => ({...prevState, accessToken, refreshToken, expiresIn, startTimeMs}));\n    }\n\n\n    refreshPlayer() {\n        // reset background style\n        if (document.body.style.backdropFilter === 'blur(5px)') {\n            document.body.style.backgroundImage = '';\n            document.body.style.backdropFilter = '';\n            document.body.classList.add('bg-white');\n        }\n        this.setState(prevState => ({...prevState, status: \"loading\"}));\n        const timeSinceStart = (Date.now() - this.state.startTimeMs) / 1000;\n        const timeLeft = Math.ceil(this.state.expiresIn - timeSinceStart);\n        console.log(`Time left: ${Math.floor(timeLeft / 60)}m ${timeLeft % 60}s | Expired: ${timeLeft <= 0}`);\n        if (timeLeft <= 0) {\n            this.refreshToken(this.state.spotifyRefreshToken);\n        } else {\n            \n        }\n    }\n\n    refreshToken(refresh_token) {\n        spotifyService.refreshTokens(refresh_token)\n            .then(data => {\n                if (data.success) {\n                    const spotifyAccessToken = data.accessToken;\n                    const spotifyExpiresIn = data.expiresIn;\n                    this.setState(prevState => ({...prevState, spotifyAccessToken, spotifyExpiresIn}));\n                    this.props.history.push(`/player?spotifyAccessToken=${spotifyAccessToken}&spotifyRefreshToken=${this.state.spotifyRefreshToken}&spotifyExpiresIn=${spotifyExpiresIn}&startTimeMs=${Date.now()}`)\n                    this.findCurrentSong(spotifyAccessToken);\n                } else {\n                    this.setState({status: \"error\", message: data.errorMessage || \"idk why\"});\n                }\n            }).catch(e => {this.setState({status: \"error\", message: \"The player failed to load for an unknown reason. Please refresh the page, or redirect to the home page to restart the authorization flow.\"})})\n    }\n\n    async getAllTopItems(accessToken) {\n        let allData = {\n            artists: {\n                short_term: [],\n                medium_term: [],\n                long_term: []\n            }, \n            tracks: {\n                short_term: [],\n                medium_term: [],\n                long_term: []\n            }\n        }\n        let success = true;\n\n        ([\"short_term\", \"medium_term\", \"long_term\"]).forEach(async (timespan) => {\n            const topArtists = await spotifyService.getTopItems(accessToken, \"artists\", timespan);\n            const topTracks = await spotifyService.getTopItems(accessToken, \"tracks\", timespan);\n\n            if (topArtists.success && topTracks.success) {\n                allData[\"artists\"][timespan] = topArtists.items;\n                allData[\"tracks\"][timespan] = topTracks.items;\n            } else {\n                success = false;\n            }\n\n        });\n\n        if (success) {\n            this.setState(prevState => ({...prevState, status: \"success\", allData}));\n        } else {\n            this.setState({status: \"error\"});\n        }\n    }\n\n    getTopGenres(topArtists = []) {\n        let genreDict = {};\n        topArtists.forEach(artist => {\n            const genres = artist.genres || [];\n            genres.forEach(genre => {\n                if (genre in genreDict) {\n                    genreDict[genre] += 1;\n                } else {\n                    genreDict[genre] = 1;\n                }\n            })\n        });\n        //console.log(genreDict);\n        return genreDict;\n    }\n\n    getTopItems(accessToken, type=\"artists\", timespan=\"medium_term\") {\n        spotifyService.getTopItems(accessToken, type, timespan)\n            .then(data => {\n                if (data.success) {\n                    this.setState(prevState => ({...prevState, status: \"success\", items: data.items}));\n                } else {\n                    this.setState({status: \"error\", message: `The recapper failed to load: ${data.errorMessage || \"idk why\"}. Please refresh the page, or redirect to the home page to restart the authorization flow.`})\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"container mx-auto text-center my-3 text-josephin\">\n                {\n                    this.state.status === \"loading\" && <div><div style={{height: \"30vh\"}} />{LoadingMessage(\"Collecting your listening history...\", \"#15d61c\", \"text-white\")}</div>\n                }\n                {\n                    this.state.status === \"success\" && this.state.allData && <RecapInfo topArtists={this.state.allData[\"artists\"]} topTracks={this.state.allData[\"tracks\"]} />\n                }\n                {\n                    this.state.status === \"error\" &&\n                    <span>\n                        <p className=\"mb-3 mx-2 text-white\">There was an issue collecting data{this.state.message && `: ${this.state.message}`}. Please login again through the home page.</p>\n                        <div className=\"flex\">\n                            <a href=\"/\" className=\"rounded bg-spotify-green text-white p-3 mx-auto\">Home page</a>\n                        </div>\n                    </span>\n                }\n            </div>\n        )\n    }\n}\n\nexport default RecapContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {LoadingMessage} from \"./Home\";\nimport spotifyService from '../services/SpotifyService';\n\nconst queryString = require('query-string');\n\n\nclass SpotifyCallback extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {status: \"loading\", error: undefined, local: undefined};\n    }\n\n    componentDidMount() {\n        // spotify redirects to /callback?code=... or /callback?error=...\n        const {code, error} = queryString.parse(this.props.location.search);\n        if (code) {\n            setTimeout(() => this.getTokens(code), 1000);\n        } else if (error) {\n            this.setState({status: \"error\", error: error});\n        }\n    }\n\n    getTokens(spotifyCode) {\n        const local = window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname === \"\";\n        spotifyService.getTokens(spotifyCode, local).then(data => {\n            if (data.success) {\n                this.setState({status: \"success\", spotifyAccessToken: data.accessToken, spotifyRefreshToken: data.refreshToken, spotifyExpiresIn: data.expiresIn, local});\n            } else {\n                this.setState({status: \"error\", message: data.errorMessage});\n            }\n        }).catch(e => {\n            this.setState({status: \"error\", message: e});\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"container mx-auto my-3 text-center text-josephin\">\n                <div style={{height: \"30vh\"}} />\n                {\n                    this.state.status === \"loading\" && LoadingMessage(\"Logging you in...\", \"#15d61c\", \"text-white\")\n                }\n                {\n                    this.state.status === \"success\" &&\n                    <div className=\"\">\n                        <Link to={`/recap?accessToken=${this.state.spotifyAccessToken}&refreshToken=${this.state.spotifyRefreshToken}&expiresIn=${this.state.spotifyExpiresIn}&startTimeMs=${Date.now()}`}\n                              className=\"rounded-lg p-4 bg-spotify-green text-xl text-josephin text-white mx-auto\">Continue to Recap</Link>\n                              \n                    </div>\n                }\n                {\n                    this.state.status === \"error\" &&\n                    <span>\n                        <p className=\"mb-3 mx-2 text-white\">There was an issue logging in{this.state.message && `: ${this.state.message}`}. Please login again through the home page.</p>\n                        <div className=\"flex\">\n                            <a href=\"/\" className=\"rounded bg-spotify-green text-white p-3 mx-auto\">Home page</a>\n                        </div>\n                    </span>\n                }\n                <div style={{height: \"50vh\"}} />\n            </div>\n        );\n    }\n}\n\nexport default SpotifyCallback;\n","import React, { useEffect, useState } from \"react\";\nimport queryString from \"querystring\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FallbackHandler = () => {\n    const [spotifyCode, setSpotifyCode] = useState(null);\n\n    useEffect(() => {\n        if (window.location.hash.includes('callback') && window.location.search) {\n            const { code } = queryString.parse(window.location.search.substring(1));\n            if (code) {\n                setSpotifyCode(code);\n            }\n        } \n    }, []);\n\n    return (\n        <div className=\"text-center\">\n            <div style={{height: \"30vh\"}} />\n            { spotifyCode && <Redirect to={`/callback?code=${spotifyCode}`}/>}\n            <div style={{height: \"70vh\"}} />\n        </div>\n);\n}\n\nexport default FallbackHandler;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Home from \"./components/Home\";\nimport RecapContainer from \"./components/Recapper\";\nimport SpotifyCallback from \"./components/SpotifyCallback\";\nimport FallbackHandler from \"./components/FallbackHandler\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <div className=\"\">\n          <Router>\n              <div className=\"flex flex-row\">\n                  <a href='/'><p className=\"text-white m-3\">Home</p></a>\n              </div>\n              <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route path=\"/callback\" component={SpotifyCallback} />\n                  <Route path=\"/recap\" component={RecapContainer} />\n                  <Route component={FallbackHandler} />\n              </Switch>\n          </Router>\n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}